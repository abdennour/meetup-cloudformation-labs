---
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref Ec2Role
  Ec2Role:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
      -
        PolicyName: GlobalLambdaLogToCloudWatch
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: Allow
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "arn:aws:logs:*:*:*"

Outputs:
  InstanceProfile:
    Description: Allow EC2 the read access to s3 
    Value: !Ref Ec2InstanceProfile
    Export: # added to export
      Name: EC2ProfileS3ReadAccess
  LambdaRoleExecution:
    Value: !GetAtt LambdaRole.Arn
    Description: Allow Lambda functions the Write access to S3 
    Export:
      Name: LambdaRoleS3WriteAccess